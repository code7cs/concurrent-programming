// declarations
Semaphore [] permToProcess = { new Semaphore (0), new Semaphore (0), new Semaphore(0)};
Semaphore [] doneProcessing = { new Semaphore (0), new Semaphore (0), new Semaphore(0)};
// Semaphore mutex = new Semaphore(1);

Semaphore station0  = new Semaphore(1);
Semaphore station1  = new Semaphore(1);
Semaphore station2  = new Semaphore(1);

thread Car: {
	// mutex.acquire();
	// for(int station = 0; station < 3; station++) {
	//	permToProcess[station].release();
	//	doneProcessing[station].acquire();
	// }
	// mutex.release();

	station0.acquire();
	permToProcess[0].release();
	// wait for machine at station 0 to finish
	doneProcessing[0].acquire();

	station1.acquire();
	station0.release();
	permToProcess[1].release();
	// wait for machine at station 1 to finish
	doneProcessing[1].acquire();

	station2.acquire();
	station1.release();
	permToProcess[2].release();
	// wait for machine at station 2 to finish
	doneProcessing[2].acquire();

	station2.release();
}

thread MachineAtStation (i): { 
	while ( true ) {
		permToProcess[i].acquire(); 
		// process vehicle 
		doneProcessing[i].release();
	} 
}

